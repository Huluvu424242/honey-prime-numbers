(()=>{const e=(e,r)=>{const n=globalThis[r];return null!=n&&e instanceof n},r=n=>{if(null!=n){if(e(n,"ArrayBuffer")||e(n,"MessagePort")||e(n,"ImageBitmap")||e(n,"OffscreenCanvas"))return[n];if("object"==typeof n)return n.constructor===Object&&(n=Object.values(n)),Array.isArray(n)?n.flatMap(r):r(n.buffer)}return[]},n={},t="stencil.prime.worker",s=t+".cb";function a(e,r){let n=!0;return r.forEach((r=>{r>1&&e%r==0&&(n=!1)})),n}addEventListener("message",(async({data:e})=>{if(e&&e[0]===t){let a,o,i=e[1],c=e[2],l=e[3],f=0,u=l.length;try{for(;f<u;f++)if(Array.isArray(l[f])&&l[f][0]===s){const e=l[f][1];l[f]=(...r)=>{postMessage([s,e,r])}}a=await n[c](...l)}catch(e){a=null,o=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},a=void 0}const m=r(a);postMessage([t,i,a,o],m)}})),n.generatePrims=async(e,r)=>new Promise((n=>{!function(e,r){let n=[],t=2;for(;t<e||-1===e;)a(t,n)?(console.log("### new prim "+t),n.push(t),r(t)):console.log("keine primzahl: "+t),t++}(e,r),n()}))})();